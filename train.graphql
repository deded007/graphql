type AlertStation {
  StationID:String
  StationName:String
  temp:Station  @proxy(get: "http://localhost:3000/Stations?StationID=5010")
}
type AlertScope {
 Stations:[AlertStation]
}
type Alert {
 Title:String
 Description:String 
 Scope:AlertScope
}

type ZhEn {
  Zh_tw:String
  En:String
}
type Station {
  StationID:String
  StationName:ZhEn
  StationAddress:String
}

type TimetableTimetable {
  TrainNo:String
  ArrivalTime:String
}
type Timetable {
 StationID:String
 StationName:[ZhEn] 
 Timetables:[TimetableTimetable]
}

type Query {
  Alert: [Alert] @proxy(get: "http://localhost:3000/Alerts")
  Station: [Station] @proxy(get: "http://localhost:3000/Stations")
  Timetable: [Timetable] @proxy(get: "http://localhost:3000/Timetables")
  # getA1: [A1] @proxy(get: "http://localhost:3000/api/A1")
  # getString(a: String!): A1 @proxy(get: "http://localhost:3000/api/string/$a")
  # getA1ByPlateNumb(plateNumb: String!): A1 @proxy(get: "http://localhost:3000/api/A1/PlatNumb/$plateNumb")
}
#graphql-rest-proxy train.graphql